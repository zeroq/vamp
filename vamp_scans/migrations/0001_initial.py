# Generated by Django 4.1.4 on 2023-02-20 14:21

from django.conf import settings
from django.db import migrations, models
import django.db.models.deletion


class Migration(migrations.Migration):

    initial = True

    dependencies = [
        migrations.swappable_dependency(settings.AUTH_USER_MODEL),
    ]

    operations = [
        migrations.CreateModel(
            name='Contact',
            fields=[
                ('id', models.BigAutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('typ', models.CharField(choices=[('RS', 'Responsible'), ('AD', 'Administrator'), ('ES', 'Escalation Contact')], default='RS', max_length=2)),
                ('first_name', models.CharField(max_length=100)),
                ('last_name', models.CharField(max_length=100)),
                ('email', models.EmailField(max_length=254)),
            ],
            options={
                'unique_together': {('first_name', 'last_name', 'email')},
            },
        ),
        migrations.CreateModel(
            name='HostGroup',
            fields=[
                ('id', models.BigAutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('name', models.CharField(max_length=256, unique=True)),
                ('creation_date', models.DateTimeField(auto_now_add=True)),
            ],
        ),
        migrations.CreateModel(
            name='Tag',
            fields=[
                ('id', models.BigAutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('tag', models.CharField(max_length=256)),
                ('creation_date', models.DateTimeField(auto_now_add=True)),
                ('link', models.CharField(blank=True, max_length=2048, null=True)),
                ('description', models.TextField(blank=True, null=True)),
                ('ttype', models.IntegerField(choices=[(0, 'automatic'), (1, 'manual')], default=0)),
            ],
            options={
                'unique_together': {('tag', 'ttype')},
            },
        ),
        migrations.CreateModel(
            name='Host',
            fields=[
                ('id', models.BigAutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('name', models.CharField(max_length=200)),
                ('ip', models.GenericIPAddressField()),
                ('fqdn', models.CharField(default='', max_length=200)),
                ('netbios_name', models.CharField(default='', max_length=200)),
                ('rdns', models.CharField(default='', max_length=200)),
                ('predicted_os', models.CharField(blank=True, max_length=200, null=True)),
                ('os', models.CharField(default='unknown', max_length=200)),
                ('first_scan', models.DateTimeField(auto_now_add=True)),
                ('last_scan', models.DateTimeField(auto_now=True)),
                ('internet_facing', models.BooleanField(default=False)),
                ('contacts', models.ManyToManyField(blank=True, to='vamp_scans.contact')),
                ('groups', models.ManyToManyField(blank=True, to='vamp_scans.hostgroup')),
                ('tags', models.ManyToManyField(blank=True, to='vamp_scans.tag')),
            ],
            options={
                'unique_together': {('ip', 'fqdn', 'netbios_name', 'rdns')},
            },
        ),
        migrations.CreateModel(
            name='Finding',
            fields=[
                ('id', models.BigAutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('uuid', models.CharField(max_length=36, unique=True)),
                ('scan_date', models.DateTimeField()),
                ('first_seen', models.DateTimeField(auto_now_add=True)),
                ('last_seen', models.DateTimeField(auto_now=True)),
                ('last_reported', models.DateTimeField(blank=True, null=True)),
                ('date_remediated', models.DateTimeField(blank=True, null=True)),
                ('escalated', models.BooleanField(default=False)),
                ('name', models.CharField(max_length=200)),
                ('source', models.CharField(max_length=200)),
                ('service', models.CharField(blank=True, max_length=200, null=True)),
                ('cve', models.CharField(blank=True, max_length=200, null=True)),
                ('link', models.CharField(blank=True, max_length=200, null=True)),
                ('url', models.CharField(blank=True, max_length=2048, null=True)),
                ('port', models.IntegerField(default=0)),
                ('protocol', models.CharField(default='tcp', max_length=10)),
                ('severity', models.IntegerField(choices=[(0, 'informative'), (1, 'low'), (2, 'medium'), (3, 'high'), (4, 'critical')], default=0)),
                ('status', models.IntegerField(choices=[(0, 'open'), (1, 'patched'), (2, 'workaround'), (3, 'exception'), (4, 'false'), (5, 'ignore')], default=0)),
                ('description', models.TextField(blank=True)),
                ('short', models.CharField(blank=True, max_length=2048)),
                ('exploit_available', models.BooleanField(default=False)),
                ('exploited_in_the_wild', models.BooleanField(default=False)),
                ('host', models.ForeignKey(on_delete=django.db.models.deletion.CASCADE, to='vamp_scans.host')),
                ('tags', models.ManyToManyField(blank=True, to='vamp_scans.tag')),
            ],
        ),
        migrations.CreateModel(
            name='Comment',
            fields=[
                ('id', models.BigAutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('creation_time', models.DateTimeField(auto_now_add=True)),
                ('ctext', models.TextField()),
                ('author', models.ForeignKey(on_delete=django.db.models.deletion.CASCADE, to=settings.AUTH_USER_MODEL)),
                ('finding', models.ForeignKey(on_delete=django.db.models.deletion.CASCADE, to='vamp_scans.finding')),
            ],
        ),
    ]
